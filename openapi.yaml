openapi: 3.0.0
info:
  title: MijnApp
  description: Deze documentatie beschrijft de generieke MijnApp api. Als uitgangspunt is de API-strategie van het DSO gebruikt.
    [API en URI strategie DSO](https://aandeslagmetdeomgevingswet.nl/digitaal-stelsel/documenten/documenten/api-uri-strategie/)
  version: 0.4.0

servers:
  - url: accp.example.com/api/v1
    description: Acceptatie domein

paths:
  /personen/{bsn}:
    get:
      summary: Persoondetails
      operationId: getUserByBsn
      tags:
        - personen
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: Een JSON arrya met persoonsgegevens
          headers:
            API-version:
              $ref: '#/components/headers/API-version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persoon'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /personen/{bsn}/contracten:
    get:
      summary: Lijst met contracten
      tags:
        - contracten
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: Een JSON array met contracten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /personen/{bsn}/contracten/{id}:
    get:
      summary: Contractdetails
      tags:
        - contracten
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contractidentificatie
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDetails'
              encoding:
                contractLeverancierLogo:
                  contentType: image/svg+xml

  /personen/{bsn}/logregels:
    get:
      summary: Lijst met AVG logregels
      tags:
        - avg logregels
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logregel'

  /personen/{bsn}/logregels/{id}:
    get:
      summary: AVG logregeldetails
      tags:
        - avg logregels
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contractidentificatie
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogregelDetails'

components:
  # Reusable schemas (data models)
  schemas:
    # Persoon
    Persoon:
      type: object
      properties:
        id:
          type: string
          format: uuid
        voornaam:
          type: string
        tussenvoegsel:
          type: string
        achternaam:
          type: string
        geboortedatum:
          type: string
          format: date
      required:
        - id
        - achternaam

    # Contract
    Contract:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unieke sleutel contract
        identificatie:
          type: string
          description: Domeinspecifiek contractnummer, bijvoorbeeld polisnummer of zaakidentificatie
        titel:
          type: string
        omschrijving:
          type: string
        organisatieNaam:
          type: string
          description: Naam leverancier
      required:
        - id
        - contractNummer

    # Contractdetails
    ContractDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unieke sleutel contract
        identificatie:
          type: string
          description: Domeinspecifiek contractnummer, bijvoorbeeld polisnummer of zaakidentificatie
        titel:
          type: string
        omschrijving:
          type: string
        beginDatum:
          type: string
          format: date
          nullable: true
          description: Ingangsdatum contract
        eindDatum:
          type: string
          format: date
          nullable: true
          description: Einddatum contract
        type:
          type: string
          description: Soort contract. polis, identiteitsdocument, voorziening
        kosten:
          $ref: '#/components/schemas/Kosten'
        organisatie:
          $ref: '#/components/schemas/Organisatie'
        extraVelden:
          type: array
          description: Vrij aan te bieden key-value pairs.
          items:
            type: string
          minItems: 1
          maxItems: 5
      required:
        - id
        - identificatie
        - titel
        - beginDatum

    # Logregel
    Logregel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verwerker:
          type: object
          properties:
            organisatie:
              type: string
            gebruikersId:
              type: string
            applicatieId:
              type: string
        procesId:
          type: string
          description: ProcesId zoals gedefinieerd in NLX
        procesOmschrijving:
          type: string
          description: Omschrijving proces
        raadpleegDatumTijdstip:
          type: string
          format: date-time
        opgevraagdeElementen:
          type: string
          description: ombouwen naar array
        verwerkingsType:
          type: string
          enum:
            - C
            - R
            - U
            - D
            - E

    # LogregelDetails
    LogregelDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid

    #Adres
    Adres:
      type: object
      properties:
        bagIdentificatie:
          type: string
          maxLength: 16
          description: Verblijfsobjectidentificatie (BAG-elementcode 56.01)
        woonplaats:
          type: string
          maxLength: 80
        openbareRuimteNaam:
          type: string
          description: straatnaam volgens de BAG
          maxLength: 80
        postcode:
          type: string
          pattern: '[1-9][0-9]{3}[A-Z]{0,2}'
          minLength: 6
          maxLength: 6
        huisnummer:
          type: number
          minimum: 1
          maximum: 99999
        huisletter:
          type: string
          pattern: '[a-zA-Z]'
          maxLength: 1
        huisnummerToevoeging:
          type: string
          pattern: '[a-zA-Z0-9]{0,4}'
          maxLength: 4

    #Kosten
    Kosten:
      type: object
      properties:
        bedrag:
          type: number
          description: bedrag in centen
        eenheid:
          type: string
          enum:
            - per maand
            - per jaar
            - per 4 weken
            - per uur
            - per minuut
            - per dag

    # Organisatie
    Organisatie:
      type: object
      properties:
        handelsnaam:
          type: string
          description: Organisatie die de dienst of het product levert
        kvkNummer:
          type: number
          description: kvk-nummer
          minLength: 8
          maxLength: 8
        vestigingsnummer:
          type: number
          description: vestigingsnummer
          minLength: 12
          maxLength: 12
        logo:
          type: string
          format: svg
          description: svg
        telefoonnummer:
          type: string
        email:
          type: string
          format: email
        adres:
          $ref: '#/components/schemas/Adres'
        extraVelden:
          type: string
          description: ombouwen naar array

    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  # Reusable path, query, header and cookie parameters
  parameters:
    bsnPathParam:
      in: path
      name: bsn
      schema:
        type: string
      required: true

  # Security scheme definitions (see Authentication), HTTP bearer
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

  # Reusable request bodies
  # requestBodies:
  #   ...

  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  responses:
    # Response: Not Found
    NotFound:
      description: Not found, er is een niet-bestaande resource opgevraagd
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    # Response: Forbidden
    Forbidden:
      description: Forbidden, de geverifieerde gebruiker heeft geen toegangsrechten voor de resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    # Response Unauthorized
    Unauthorized:
      description: Unauthorized, er zijn geen of ongeldige authenticatie details verstrekt.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  # Reusable response headers
  headers:
    API-version:
      description: semver versioning
      schema:
        type: string

  # Reusable examples
  examples:
    9digitBsn:
      summary: Voorbeeld van een bsn met 9 karakters
      value: 123451234
    8digitBsn:
      summary: Voorbeeld van een bsn met een voorloopnul
      value: 012341234

  # Reusable links
  # links:
  #   ...

  # Reusable callbacks
  # callbacks:
  #   ...

# Apply the security globally to all operations
security:
  - bearerAuth: []         # use the same name as the defined securityScheme
