openapi: 3.0.0
info:
  title: MijnApp
  description: Deze documentatie beschrijft de generieke MijnApp api.
  version: 0.3.0

servers:
  - url: accp.example.com/api/v1
    description: Acceptatie domein

paths:
  /personen/{bsn}:
    get:
      summary: Persoondetails
      operationId: getUserByBsn
      tags:
        - personen
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: Een JSON arrya met persoonsgegevens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persoon'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /personen/{bsn}/contracten:
    get:
      summary: Lijst met contracten
      tags:
        - contracten
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: Een JSON array met contracten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /personen/{bsn}/contracten/{id}:
    get:
      summary: Contractdetails
      tags:
        - contracten
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contractidentificatie
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDetails'

  /personen/{bsn}/logregels:
    get:
      summary: Lijst met AVG logregels
      tags:
        - avg logregels
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logregel'

  /personen/{bsn}/logregels/{id}:
    get:
      summary: AVG logregeldetails
      tags:
        - avg logregels
      parameters:
        - $ref: '#/components/parameters/bsnPathParam'
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contractidentificatie
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogregelDetails'

components:
  # Reusable schemas (data models)
  schemas:
    # Persoon
    Persoon:
      type: object
      properties:
        id:
          type: string
          format: uuid
        voornaam:
          type: string
        tussenvoegsel:
          type: string
        achternaam:
          type: string
        geboortedatum:
          type: string
          format: date
      required:
        - id
        - achternaam

    # Contract
    Contract:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contractNummer:
          type: string
        contractEindDatum:
          type: string
          nullable: true
        contractKosten:
          type: number
          nullable: true
        contractLeverancier:
          type: string
      required:
        - id
        - contractNummer


    # Contractdetails
    ContractDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contractNummer:
          type: string
        contractEindDatum:
          type: string
          nullable: true
        contractKosten:
          type: number
          nullable: true
        contractLeverancier:
          type: string
        titel:
          type: string
        contractType:
          type: string
        contractOmschrijving:
          type: string
        contractStartdatum:
          type: string
        contractLeverancierLogo:
          type: string
          format: svg
          description: svg
        contractLeverancierTelefoonnummer:
          type: string
        contractLeverancierEmail:
          type: string
        contractLeverancierAdres:
          $ref: '#/components/schemas/Adres'

    # Logregel
    Logregel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        requesterUserId:
          type: string
        requesterApplicationId:
          type: string
        requesterProcessId:
          type: string
        requestedDataElements:
          type: string

    # LogregelDetails
    LogregelDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid

    #Adres
    Adres:
      type: object
      properties:
        straatnaam:
          type: string
        postcode:
          type: string
        huisnummer:
          type: string
        woonplaats:
          type: string

    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  # Reusable path, query, header and cookie parameters
  parameters:
    bsnPathParam:
      in: path
      name: bsn
      schema:
        type: string
      required: true

  # Security scheme definitions (see Authentication), HTTP bearer
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

  # Reusable request bodies
  # requestBodies:
  #   ...

  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  responses:
    # Response: Not Found
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    # Response Unauthorized
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  # Reusable response headers
  # headers:
  #   ...

  # Reusable examples
  examples:
    9digitBsn:
      summary: Voorbeeld van een bsn met 9 karakters
      value: 123451234
    8digitBsn:
      summary: Voorbeeld van een bsn met een voorloopnul
      value: 012341234

  # Reusable links
  # links:
  #   ...

  # Reusable callbacks
  # callbacks:
  #   ...

# Apply the security globally to all operations
security:
  - bearerAuth: []         # use the same name as the defined securityScheme
